import React, { useEffect, useState } from 'react' import { flushOfflineQueue, getQueueStatus } from '@/lib/offlineQueue' import { toast } from 'sonner'

export default function OfflineQueueWidget() { const [status, setStatus] = useState({ online: true, pending: 0 }) const [visible, setVisible] = useState(false)

const updateStatus = () => { const current = getQueueStatus() setStatus(current) setVisible(current.pending > 0) }

const flush = async () => { const flushed = await flushOfflineQueue() if (flushed) { toast.success('Offline submissions flushed!') } else { toast.error('Flush failed. Will retry soon.') } updateStatus() }

useEffect(() => { updateStatus() window.addEventListener('online', updateStatus) window.addEventListener('offline', updateStatus) const interval = setInterval(updateStatus, 5000) return () => { window.removeEventListener('online', updateStatus) window.removeEventListener('offline', updateStatus) clearInterval(interval) } }, [])

if (!visible) return null

return ( <div className="fixed top-4 right-4 bg-white shadow-lg rounded-2xl px-4 py-2 z-50 animate-fade-in"> <div className="text-sm font-medium text-gray-800"> {status.online ? 'Online' : 'Offline'} â€¢ {status.pending} pending </div> <button
className="mt-1 text-xs text-blue-600 hover:underline"
onClick={flush}
> Flush Now </button> </div> ) }
